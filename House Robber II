#include <bits/stdc++.h> 
long long int solve(vector<int> &nums)
{
    int n=nums.size();
    long long int prev2=0;
    long long int prev1=nums[0];
    for(int i=1;i<n;i++)
    {
        long long int take=nums[i];
        if(i>1){
            take=nums[i]+prev2;
        }
        long long int ntake=0+prev1;
        long long int curri=max(take,ntake);
        prev2=prev1;
        prev1=curri;
    }
    return prev1;
}
long long int houseRobber(vector<int>& valueInHouse)
{
    vector<int> temp1;
    vector<int> temp2;
    int n=valueInHouse.size();
    if(n==1) return valueInHouse[0];
    for (int i = 0; i < n; i++) {
      if (i != 0)
        temp1.push_back(valueInHouse[i]);
      if (i != n-1)
        temp2.push_back(valueInHouse[i]);
    }
    long long int ans1=solve(temp1);
    long long int ans2=solve(temp2);

    return max(ans1,ans2);
}
